{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/Services/api.service.ts","webpack:///src/Services/weather.service.ts","webpack:///src/app/accuweather-icon.pipe.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/constants.ts","webpack:///src/app/fav/fav.component.ts","webpack:///src/app/fav/fav.component.html","webpack:///src/app/weather/weather.component.ts","webpack:///src/app/weather/weather.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ApiService","http","protocol","window","location","url","q","params","fromObject","apikey","metric","get","lat","lng","getRequest","key","providedIn","WeatherService","appService","trackStateHistory","favCity","state","getState","getCurrentConditions","pipe","data","subscribe","title","cityName","text","WeatherText","temperature","Temperature","icon","WeatherIcon","console","log","setState","IMG_URL","AccuweatherIconPipe","value","name","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","mode","document","querySelector","style","setProperty","switchMode","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ADD_FAV","REMOVE_FAV","API_KEY","DEFAULT_LAT","DEFAULT_LNG","FavComponent","weatherService","ngUnSubscribe","favArr","stateChanged","Object","map","push","WeatherComponent","autoCompleteInput","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","getGeoPosition","handleInitPosition","length","getAutoComplete","suggestions","autoCompletedSuggestions","Key","storeState","suggestion","favState","getFavState","LocalizedName","Country","autoCompleteValue","getFiveDays","geoPositionRes","EnglishName","next","complete","selectedKey","get5DaysOfForecasts","fiveDaysForecastData","headLine","Headline","Text","forecasts","DailyForecasts","faveState","selectedCity","add","remove","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { API_KEY } from 'src/app/constants';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http: HttpClient) { }\n\n   protocol:string = window.location.protocol;\n  \n  getRequest(url, q?) {\n    const params = new HttpParams({fromObject: {apikey: API_KEY, q, metric: 'true'}});\n    return this.http.get(url, {params});\n\n  }\n\n  getGeoPosition(lat: number, lng: number): Observable<any> {\n    const url = `${this.protocol}//dataservice.accuweather.com/locations/v1/cities/geoposition/search`;\n    return this.getRequest(url, `${lat},${lng}`);\n  }\n\n  getAutoComplete(key: string): Observable<any> {\n    const url = `${this.protocol}//dataservice.accuweather.com/locations/v1/cities/autocomplete`;\n    return this.getRequest(url, `${key}`);\n  }\n\n  get5DaysOfForecasts(key: string): Observable<any> {\n    const url = `${this.protocol}//dataservice.accuweather.com/forecasts/v1/daily/5day/${key}`;\n    return this.getRequest(url);\n  }\n\n\n  getCurrentConditions(key: string): Observable<any> {\n    const url = `${this.protocol}//dataservice.accuweather.com/currentconditions/v1/${key}`;\n    return this.getRequest(url);\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {ObservableStore} from '@codewithdan/observable-store';\nimport {ApiService} from 'src/Services/api.service';\nimport {map} from 'rxjs/operators';\n//import {CurrentConditions} from './model/current-conditions';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherService extends ObservableStore<{}> {\n\n  constructor(protected appService: ApiService) {\n\n    super({trackStateHistory: true});\n\n  }\n\n  add(favCity) {\n    const state = this.getState() || {};\n\n    this.appService.getCurrentConditions(favCity.key)\n      .pipe(map((data) => data[0]))\n      .subscribe((data: any) => {\n          state[favCity.key] = {\n            title: favCity.cityName,\n            text: data.WeatherText,\n            temperature: data.Temperature,\n            icon: data.WeatherIcon\n          };\n          console.log(state);\n          this.setState(state,\n            'add_favCity');\n        }\n      );\n\n\n  }\n\n\n  remove(favCity) {\n    const state = this.getState() || {};\n    delete state[favCity.key];\n    this.setState(state,\n      'remove_favCity');\n  }\n\n  get() {\n    return this.getState() || {};\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nexport const IMG_URL = `https://developer.accuweather.com/sites/default/files`;\n@Pipe({\n  name: 'accuweatherIcon'\n})\nexport class AccuweatherIconPipe implements PipeTransform {\n\n\n  transform(value: any): any {\n    if (value < 10) {\n      value = `0${value}`;\n    }\n    return `${IMG_URL}/${value}-s.png`;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FavComponent } from './fav/fav.component';\nimport { WeatherComponent } from './weather/weather.component';\n\n\nconst routes: Routes = [\n  { path: '', component: WeatherComponent },\n  { path: 'fav', component: FavComponent }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component , OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  \n  title = 'WeatherHerolo';\n  mode = 'Light';\n\n  ngOnInit() {\n    document.querySelector('body').style.setProperty('--bg-color', '#f8fafb');\n    document.querySelector('body').style.setProperty('--text-color', '#272727');\n  }\n\n\n  switchMode(mode) {\n    if (mode === 'Light') {\n      document.querySelector('body').style.setProperty('--bg-color', '#272727');\n      document.querySelector('body').style.setProperty('--text-color', '#f8fafb');\n      this.mode = 'Dark';\n    } else {\n      document.querySelector('body').style.setProperty('--bg-color', '#f8fafb');\n      document.querySelector('body').style.setProperty('--text-color', '#272727');\n      this.mode = 'Light';\n    }\n  }\n}\n","<div class=\"header\">\n  <div class=\"title\">Herolo Weather App</div>\n  <nav>\n    <a routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact:true}\">index</a>\n    <a routerLink=\"/fav\" routerLinkActive=\"active\">fav</a>\n  </nav>\n\n  <div class=\"mode-switcher\" (click)=\"switchMode(mode)\">Mode: {{mode}}</div>\n</div>\n\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FavComponent } from './fav/fav.component';\nimport { WeatherComponent } from './weather/weather.component';\nimport { AccuweatherIconPipe } from './accuweather-icon.pipe';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FavComponent,\n    WeatherComponent,\n    AccuweatherIconPipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export const ADD_FAV = 'Add To';\r\nexport const REMOVE_FAV = 'Remove From';\r\nexport const API_KEY = 'KRgJjaHbsDBpSrik1gpBtWr5O8vtBGLs';\r\nexport const DEFAULT_LAT = 32.109333;\r\nexport const DEFAULT_LNG = 34.855499;\r\n","import {Component, OnInit} from '@angular/core';\nimport {WeatherService} from '../../Services/weather.service';\nimport {Subject} from 'rxjs';\nimport {filter, map, takeUntil} from 'rxjs/operators';\nimport {ApiService} from '../../Services/api.service';\n\n\n@Component({\n  selector: 'app-fav',\n  templateUrl: './fav.component.html',\n  styleUrls: ['./fav.component.scss']\n})\nexport class FavComponent implements OnInit {\n\n  constructor(protected weatherService: WeatherService) {\n  }\n\n  ngUnSubscribe: Subject<void> = new Subject<void>();\n\n  favArr = [];\n\n  ngOnInit() {\n    this.weatherService.stateChanged\n      .pipe(\n        takeUntil(this.ngUnSubscribe),\n        filter(state => state !== null)\n      )\n      .subscribe(state => {\n        Object.keys(state).map((key) => {\n          this.favArr.push(state[key]);\n        });\n      });\n  }\n\n}\n","<div class=\"forecasts\">\n    <div class=\"forecast\" *ngFor=\"let forecast of favArr;\">\n      <div class=\"title\"> {{forecast.title}}</div>\n      <div class=\"phrase\"> {{forecast.text}}</div>\n      <div class=\"temperature\"> {{forecast.temperature.Metric.Value}}{{forecast.temperature.Metric.Unit}}</div>\n      <img src=\"{{forecast.icon | accuweatherIcon }}\"/>\n    </div>\n  </div>","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport { ApiService } from 'src/Services/api.service';\nimport {ADD_FAV, DEFAULT_LAT, DEFAULT_LNG, REMOVE_FAV} from '../constants';\nimport {Subject} from 'rxjs';\nimport {debounceTime, filter, switchMap, takeUntil} from 'rxjs/operators';\nimport {WeatherService} from '../../Services/weather.service';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.scss']\n})\nexport class WeatherComponent implements OnInit, OnDestroy {\n  autoCompleteInput = new Subject();\n  autoCompleteValue;\n  autoCompletedSuggestions: any[];\n  cityName: string;\n  headLine: string;\n  forecasts: any[];\n  favState;\n  selectedKey: any;\n\n  constructor(protected appService: ApiService, protected weatherService: WeatherService) {\n  }\n\n  ngUnSubscribe: Subject<void> = new Subject<void>();\n\n  ngOnInit() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const {latitude, longitude} = position.coords;\n        this.appService.getGeoPosition(latitude, longitude).subscribe((data: any) => {\n          this.handleInitPosition(data);\n        });\n      });\n    } else {\n      this.appService.getGeoPosition(DEFAULT_LAT, DEFAULT_LNG).subscribe((data: any) => {\n        this.handleInitPosition(data);\n      });\n    }\n\n\n    this.autoCompleteInput\n      .pipe(\n        filter((data: string) => data.length > 0),\n        takeUntil(this.ngUnSubscribe),\n        debounceTime(300),\n        switchMap((data: string) => {\n          return this.appService.getAutoComplete(data);\n        })\n      )\n      .subscribe((suggestions: any[]) => {\n        this.autoCompletedSuggestions = suggestions;\n      });\n  }\n\n\n  private getFavState(Key: string) {\n    const storeState = this.weatherService.get();\n    return storeState[Key] ? REMOVE_FAV : ADD_FAV;\n  }\n\n  selectSuggestion(suggestion: any) {\n    this.favState          = this.getFavState(suggestion.Key);\n    this.cityName          = `${suggestion.LocalizedName},${suggestion.Country.LocalizedName}`;\n    this.autoCompleteValue = this.cityName;\n    this.getFiveDays(suggestion.Key);\n    this.autoCompletedSuggestions = null;\n  }\n\n\n  private handleInitPosition(geoPositionRes: any) {\n    this.favState    = this.getFavState(geoPositionRes.Key);\n    this.cityName    = `${geoPositionRes.EnglishName},${geoPositionRes.Country.EnglishName}`;\n    this.getFiveDays(geoPositionRes.Key);\n  }\n\n\n  ngOnDestroy(): void {\n    this.ngUnSubscribe.next();\n    this.ngUnSubscribe.complete();\n  }\n\n\n  getFiveDays(key) {\n    this.selectedKey = key;\n    this.appService.get5DaysOfForecasts(key).subscribe((fiveDaysForecastData: any) => {\n      this.headLine  = fiveDaysForecastData.Headline.Text;\n      this.forecasts = fiveDaysForecastData.DailyForecasts;\n    });\n  }\n\n\n  toggleFavorites() {\n    const faveState = this.getFavState(this.selectedKey);\n    const selectedCity = {\n      key: this.selectedKey,\n      cityName: this.cityName\n    };\n    if (faveState === ADD_FAV) {\n      this.weatherService.add(selectedCity);\n    } else {\n      this.weatherService.remove(selectedCity);\n    }\n\n    this.favState = faveState === ADD_FAV ? REMOVE_FAV : ADD_FAV;\n\n\n  }\n}\n","<div>\n    <input type=\"text\" class=\"autoComplete\"\n    [ngModel]=\"autoCompleteValue\"\n    (input)=\"autoCompleteInput.next($event.target.value)\"/>\n\n<div class=\"autocomplete-suggestions\" *ngIf=\"autoCompletedSuggestions\">\n<div class=\"suggestion\" *ngFor=\"let suggestion of autoCompletedSuggestions\" (click)=\"selectSuggestion(suggestion)\">\n {{suggestion.LocalizedName}}, {{suggestion.Country.LocalizedName}}\n</div>\n</div>\n\n\n<div class=\"title\">\n<div class=\"name\">{{cityName}}</div>\n<div class=\"headLine\">{{headLine}}</div>\n</div>\n\n<div class=\"fav\" *ngIf=\"cityName\" (click)=\"toggleFavorites()\">{{favState}} Favorites</div>\n\n\n<div class=\"forecasts\">\n<div class=\"forecast\" *ngFor=\"let forecast of forecasts;\">\n <div class=\"date\">{{forecast.Date | date: 'fullDate'}}</div>\n <div class=\"phrase\"> {{forecast.Day.IconPhrase}}</div>\n <div class=\"temperature\"> {{forecast.Temperature.Minimum.Value}}{{forecast.Temperature.Minimum.Unit}} - {{forecast.Temperature.Maximum.Value}}{{forecast.Temperature.Maximum.Unit}}</div>\n <img src=\"{{forecast.Day.Icon | accuweatherIcon }}\"/>\n</div>\n</div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}